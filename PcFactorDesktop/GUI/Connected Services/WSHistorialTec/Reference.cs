//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUI.WSHistorialTec {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSHistorialTec.WSHistorialSoap")]
    public interface WSHistorialSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Buscar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Buscar(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Buscar", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Actualizar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Actualizar(int id, string des, string estado, int fase, int precio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Actualizar", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ActualizarAsync(int id, string des, string estado, int fase, int precio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insertar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Insertar(string RutCliente, string RutAdmin, string rutTecnico, string estado, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Insertar", ReplyAction="*")]
        System.Threading.Tasks.Task<int> InsertarAsync(string RutCliente, string RutAdmin, string rutTecnico, string estado, string descripcion);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WSHistorialSoapChannel : GUI.WSHistorialTec.WSHistorialSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSHistorialSoapClient : System.ServiceModel.ClientBase<GUI.WSHistorialTec.WSHistorialSoap>, GUI.WSHistorialTec.WSHistorialSoap {
        
        public WSHistorialSoapClient() {
        }
        
        public WSHistorialSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSHistorialSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSHistorialSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSHistorialSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet Buscar(string email) {
            return base.Channel.Buscar(email);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarAsync(string email) {
            return base.Channel.BuscarAsync(email);
        }
        
        public int Actualizar(int id, string des, string estado, int fase, int precio) {
            return base.Channel.Actualizar(id, des, estado, fase, precio);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarAsync(int id, string des, string estado, int fase, int precio) {
            return base.Channel.ActualizarAsync(id, des, estado, fase, precio);
        }
        
        public int Insertar(string RutCliente, string RutAdmin, string rutTecnico, string estado, string descripcion) {
            return base.Channel.Insertar(RutCliente, RutAdmin, rutTecnico, estado, descripcion);
        }
        
        public System.Threading.Tasks.Task<int> InsertarAsync(string RutCliente, string RutAdmin, string rutTecnico, string estado, string descripcion) {
            return base.Channel.InsertarAsync(RutCliente, RutAdmin, rutTecnico, estado, descripcion);
        }
    }
}
